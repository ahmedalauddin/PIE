/* eslint-disable no-console */
#!/usr/bin/env node

/**
 * Project:  valueinfinity-mvp
 * File:     /bin/www
 * Created:  2019-01-27 13:43:44
 * Author:   Brad Kaufman
 * -----
 * Modified: 2019-02-18 17:15:51
 * Editor:   Darrin Tisdale
 */

// dependencies
import app from "../app";
import { createServer } from "http";
import { config } from "../server/config/config";

// get the port from the configuration
var port = normalizePort(config.get("server.port"));
app.set("port", port);

// create http server
var server = createServer(app);

// listen on port
server.listen(port);

// set up handlers
server.on("error", onError);

// member functions
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

// event listener for errors
function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
  case "EACCES":
    console.error(bind + " requires elevated privileges");
    process.exit(1);
    break;
  case "EADDRINUSE":
    console.error(bind + " is already in use");
    process.exit(1);
    break;
  default:
    throw error;
  }
}
